{"version":3,"file":"ekle-excel-4w_W5ObA.js","sources":["../../../../pages/calisanlar/ekle-excel.vue"],"sourcesContent":["<template>\n  <div class=\"p-6 max-w-full mx-auto bg-white rounded-lg shadow-lg\">\n    <h1 class=\"text-2xl font-semibold mb-6\">Excel ile Çalışan Ekle</h1>\n\n    <!-- Örnek Dosya İndirme Butonu -->\n    <div class=\"mb-4\">\n      <a href=\"/ornek_calisanlar_format.xlsx\" download class=\"bg-green-600 hover:bg-green-700 text-white py-2 px-4 rounded-md\">\n        Örnek Excel Dosyasını İndir\n      </a>\n    </div>\n\n    <!-- Dosya Yükleme Formu -->\n    <form @submit.prevent=\"uploadFile\">\n      <input type=\"file\" @change=\"handleFileUpload\" accept=\".xlsx, .xls\" class=\"mb-4\" />\n      \n      <!-- Yükleme Butonu, Yüklenirken Gizli -->\n      <button v-if=\"!isUploading\" type=\"submit\" class=\"bg-blue-600 text-white py-2 px-4 rounded-md\">\n        Yükle\n      </button>\n      \n      <!-- İlerleme Çubuğu -->\n      <div v-if=\"isUploading\" class=\"w-full bg-gray-200 rounded-full h-8 mt-4\">\n        <div class=\"bg-blue-600 h-8 rounded-full text-center text-white\" :style=\"{ width: `${uploadProgress}%` }\">\n          {{ uploadProgress }}%\n        </div>\n      </div>\n    </form>\n    \n    <div v-if=\"calisanlar.length\">\n      <h2 class=\"text-xl font-semibold mb-4\">Yüklenenecek Çalışanlar</h2>\n      <div class=\"p-6 max-w-full mx-auto bg-white rounded-lg shadow-lg\">\n\n        <!-- Çalışanlar Tablosu -->\n        <table class=\"min-w-full bg-white rounded-lg shadow-lg\">\n          <thead>\n            <tr>\n              <th class=\"py-2 px-4 bg-gray-200 text-gray-600 font-semibold text-sm uppercase\">Adı</th>\n              <th class=\"py-2 px-4 bg-gray-200 text-gray-600 font-semibold text-sm uppercase\">Soyadı</th>\n              <th class=\"py-2 px-4 bg-gray-200 text-gray-600 font-semibold text-sm uppercase\">Mesleği</th>\n              <th class=\"py-2 px-4 bg-gray-200 text-gray-600 font-semibold text-sm uppercase\">TC No</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"calisan in calisanlar\" :key=\"calisan.tc_no\" class=\"text-center bg-white border-b hover:bg-gray-100\">\n              <td class=\"py-2 px-4 text-gray-700\">{{ calisan.adi }}</td>\n              <td class=\"py-2 px-4 text-gray-700\">{{ calisan.soyadi }}</td>\n              <td class=\"py-2 px-4 text-gray-700\">{{ calisan.meslegi }}</td>\n              <td class=\"py-2 px-4 text-gray-700\">{{ calisan.tc_no }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport * as XLSX from 'xlsx'\n\nconst calisanlar = ref([])\nconst isUploading = ref(false) // Yükleme durumu kontrolü\nconst uploadProgress = ref(0)  // Yükleme ilerlemesi\n\n// Dosya yüklendiğinde Excel verisini okuma\nconst handleFileUpload = (event) => {\n  const file = event.target.files[0]\n  if (file) {\n    const reader = new FileReader()\n\n    reader.onload = (e) => {\n      const data = new Uint8Array(e.target.result)\n      const workbook = XLSX.read(data, { type: 'array' })\n\n      // İlk sayfayı alıyoruz\n      const firstSheet = workbook.Sheets[workbook.SheetNames[0]]\n\n      // Excel verilerini JSON formatına dönüştürüyoruz\n      const jsonData = XLSX.utils.sheet_to_json(firstSheet)\n\n      // JSON formatındaki verileri `calisanlar` listesine ekliyoruz\n      calisanlar.value = jsonData.map((row) => ({\n        adi: row['Adı'],\n        soyadi: row['Soyadı'],\n        tc_no: String(row['TC No']),\n        meslegi: row['Mesleği'],\n        firmaId: row['Firma ID'],\n        firmaYerleskeId: row['Yerleşke ID'],\n        isegiristarihi: row['İşe Giriş Tarihi'],\n        isecikistaarihi: row['İşe Çıkış Tarihi'] || null,\n        aktif: row['Aktif'] === 'Evet',\n      }))\n    }\n\n    reader.readAsArrayBuffer(file)\n  }\n}\n\n// Dosya yükleme ve çalışan verilerini API'ye gönderme\nconst uploadFile = async () => {\n  isUploading.value = true\n  uploadProgress.value = 0\n  const totalCalisan = calisanlar.value.length\n\n  for (let i = 0; i < totalCalisan; i++) {\n    try {\n       await useFetch('/api/calisan/excel', {\n      method: 'POST',\n      body: calisanlar.value[i],\n    })\n    uploadProgress.value = Math.ceil(((i + 1) / totalCalisan) * 100)\n\n\n    } catch (error) {\n      console.log(`Çalışan eklenirken hata: ${calisanlar.value[i].tc_no}`, error)\n      \n    }\n   \n  }\n\n  isUploading.value = false\n  alert('Çalışanlar başarıyla eklendi!')\n}\n</script>\n"],"names":[],"mappings":";;;;;;;AA4DA,UAAM,aAAa,IAAI,EAAE;AACzB,UAAM,cAAc,IAAI,KAAK;AAC7B,UAAM,iBAAiB,IAAI,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}