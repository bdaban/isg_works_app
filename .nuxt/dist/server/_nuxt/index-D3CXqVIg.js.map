{"version":3,"file":"index-D3CXqVIg.js","sources":["../../../../node_modules/nuxt/dist/app/composables/ssr.js","../../../../node_modules/nuxt/dist/app/composables/fetch.js","../../../../pages/egitimler/index.vue"],"sourcesContent":["import { setResponseStatus as _setResponseStatus, appendHeader, getRequestHeader, getRequestHeaders } from \"h3\";\nimport { getCurrentInstance } from \"vue\";\nimport { useServerHead } from \"@unhead/vue\";\nimport { useNuxtApp } from \"../nuxt.js\";\nimport { toArray } from \"../utils.js\";\nexport function useRequestEvent(nuxtApp = useNuxtApp()) {\n  return nuxtApp.ssrContext?.event;\n}\nexport function useRequestHeaders(include) {\n  if (import.meta.client) {\n    return {};\n  }\n  const event = useRequestEvent();\n  const _headers = event ? getRequestHeaders(event) : {};\n  if (!include || !event) {\n    return _headers;\n  }\n  const headers = /* @__PURE__ */ Object.create(null);\n  for (const _key of include) {\n    const key = _key.toLowerCase();\n    const header = _headers[key];\n    if (header) {\n      headers[key] = header;\n    }\n  }\n  return headers;\n}\nexport function useRequestHeader(header) {\n  if (import.meta.client) {\n    return void 0;\n  }\n  const event = useRequestEvent();\n  return event ? getRequestHeader(event, header) : void 0;\n}\nexport function useRequestFetch() {\n  if (import.meta.client) {\n    return globalThis.$fetch;\n  }\n  return useRequestEvent()?.$fetch || globalThis.$fetch;\n}\nexport function setResponseStatus(arg1, arg2, arg3) {\n  if (import.meta.client) {\n    return;\n  }\n  if (arg1 && typeof arg1 !== \"number\") {\n    return _setResponseStatus(arg1, arg2, arg3);\n  }\n  const event = useRequestEvent();\n  if (event) {\n    return _setResponseStatus(event, arg1, arg2);\n  }\n}\nexport function prerenderRoutes(path) {\n  if (!import.meta.server || !import.meta.prerender) {\n    return;\n  }\n  const paths = toArray(path);\n  appendHeader(useRequestEvent(), \"x-nitro-prerender\", paths.map((p) => encodeURIComponent(p)).join(\", \"));\n}\nconst PREHYDRATE_ATTR_KEY = \"data-prehydrate-id\";\nexport function onPrehydrate(callback, key) {\n  if (import.meta.client) {\n    return;\n  }\n  if (typeof callback !== \"string\") {\n    throw new TypeError(\"[nuxt] To transform a callback into a string, `onPrehydrate` must be processed by the Nuxt build pipeline. If it is called in a third-party library, make sure to add the library to `build.transpile`.\");\n  }\n  const vm = getCurrentInstance();\n  if (vm && key) {\n    vm.attrs[PREHYDRATE_ATTR_KEY] ||= \"\";\n    key = \":\" + key + \":\";\n    if (!vm.attrs[PREHYDRATE_ATTR_KEY].includes(key)) {\n      vm.attrs[PREHYDRATE_ATTR_KEY] += key;\n    }\n  }\n  const code = vm && key ? `document.querySelectorAll('[${PREHYDRATE_ATTR_KEY}*=${JSON.stringify(key)}]').forEach` + callback : callback + \"()\";\n  useServerHead({\n    script: [{\n      key: vm && key ? key : code,\n      tagPosition: \"bodyClose\",\n      tagPriority: \"critical\",\n      innerHTML: code\n    }]\n  });\n  return vm && key ? vm.attrs[PREHYDRATE_ATTR_KEY] : void 0;\n}\n","import { computed, reactive, toValue } from \"vue\";\nimport { hash } from \"ohash\";\nimport { useRequestFetch } from \"./ssr.js\";\nimport { useAsyncData } from \"./asyncData.js\";\nimport { fetchDefaults } from \"#build/nuxt.config.mjs\";\nexport function useFetch(request, arg1, arg2) {\n  const [opts = {}, autoKey] = typeof arg1 === \"string\" ? [{}, arg1] : [arg1, arg2];\n  const _request = computed(() => toValue(request));\n  const _key = opts.key || hash([autoKey, typeof _request.value === \"string\" ? _request.value : \"\", ...generateOptionSegments(opts)]);\n  if (!_key || typeof _key !== \"string\") {\n    throw new TypeError(\"[nuxt] [useFetch] key must be a string: \" + _key);\n  }\n  if (!request) {\n    throw new Error(\"[nuxt] [useFetch] request is missing.\");\n  }\n  const key = _key === autoKey ? \"$f\" + _key : _key;\n  if (!opts.baseURL && typeof _request.value === \"string\" && (_request.value[0] === \"/\" && _request.value[1] === \"/\")) {\n    throw new Error('[nuxt] [useFetch] the request URL must not start with \"//\".');\n  }\n  const {\n    server,\n    lazy,\n    default: defaultFn,\n    transform,\n    pick,\n    watch,\n    immediate,\n    getCachedData,\n    deep,\n    dedupe,\n    ...fetchOptions\n  } = opts;\n  const _fetchOptions = reactive({\n    ...fetchDefaults,\n    ...fetchOptions,\n    cache: typeof opts.cache === \"boolean\" ? void 0 : opts.cache\n  });\n  const _asyncDataOptions = {\n    server,\n    lazy,\n    default: defaultFn,\n    transform,\n    pick,\n    immediate,\n    getCachedData,\n    deep,\n    dedupe,\n    watch: watch === false ? [] : [_fetchOptions, _request, ...watch || []]\n  };\n  if (import.meta.dev && import.meta.client) {\n    _asyncDataOptions._functionName = opts._functionName || \"useFetch\";\n  }\n  let controller;\n  const asyncData = useAsyncData(key, () => {\n    controller?.abort?.(\"Request aborted as another request to the same endpoint was initiated.\");\n    controller = typeof AbortController !== \"undefined\" ? new AbortController() : {};\n    const timeoutLength = toValue(opts.timeout);\n    let timeoutId;\n    if (timeoutLength) {\n      timeoutId = setTimeout(() => controller.abort(\"Request aborted due to timeout.\"), timeoutLength);\n      controller.signal.onabort = () => clearTimeout(timeoutId);\n    }\n    let _$fetch = opts.$fetch || globalThis.$fetch;\n    if (import.meta.server && !opts.$fetch) {\n      const isLocalFetch = typeof _request.value === \"string\" && _request.value[0] === \"/\" && (!toValue(opts.baseURL) || toValue(opts.baseURL)[0] === \"/\");\n      if (isLocalFetch) {\n        _$fetch = useRequestFetch();\n      }\n    }\n    return _$fetch(_request.value, { signal: controller.signal, ..._fetchOptions }).finally(() => {\n      clearTimeout(timeoutId);\n    });\n  }, _asyncDataOptions);\n  return asyncData;\n}\nexport function useLazyFetch(request, arg1, arg2) {\n  const [opts = {}, autoKey] = typeof arg1 === \"string\" ? [{}, arg1] : [arg1, arg2];\n  if (import.meta.dev && import.meta.client) {\n    opts._functionName ||= \"useLazyFetch\";\n  }\n  return useFetch(\n    request,\n    {\n      ...opts,\n      lazy: true\n    },\n    // @ts-expect-error we pass an extra argument with the resolved auto-key to prevent another from being injected\n    autoKey\n  );\n}\nfunction generateOptionSegments(opts) {\n  const segments = [\n    toValue(opts.method)?.toUpperCase() || \"GET\",\n    toValue(opts.baseURL)\n  ];\n  for (const _obj of [opts.params || opts.query]) {\n    const obj = toValue(_obj);\n    if (!obj) {\n      continue;\n    }\n    const unwrapped = {};\n    for (const [key, value] of Object.entries(obj)) {\n      unwrapped[toValue(key)] = toValue(value);\n    }\n    segments.push(unwrapped);\n  }\n  return segments;\n}\n","<template>\r\n  <div class=\"p-6 max-w-full mx-auto bg-white rounded-lg shadow-lg\">\r\n    <h1 class=\"text-2xl font-semibold mb-6\">Eğitimler</h1>\r\n\r\n    \r\n    <div class=\"mb-4\">\r\n      <button @click=\"openEgitimModal(null)\" class=\"bg-green-600 hover:bg-green-700 text-white py-2 px-4 rounded-md\">\r\n        Yeni Eğitim Ekle\r\n      </button>\r\n      <!-- Eğitim Konusu Ekleme Butonu -->\r\n      <NuxtLink to=\"/egitimler/ekle\" class=\"bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-md ml-4\">\r\n        Eğitim Konusu Ekle\r\n      </NuxtLink>\r\n    </div>\r\n\r\n\r\n<!--Soninsallah-->\r\n<table class=\"min-w-full bg-white rounded-lg shadow-lg border border-gray-300\">\r\n  <thead>\r\n    <tr class=\"border-b border-gray-300\">\r\n      <th class=\"py-2 px-4 bg-gray-200 text-gray-600 font-semibold text-sm uppercase border-r border-gray-300\">Çalışan Adı</th>\r\n      <th class=\"py-2 px-4 bg-gray-200 text-gray-600 font-semibold text-sm uppercase border-r border-gray-300\">Firma Adı</th>\r\n      <th class=\"py-2 px-4 bg-gray-200 text-gray-600 font-semibold text-sm uppercase border-r border-gray-300\">Taşeron Adı</th>\r\n      <th class=\"py-2 px-4 bg-gray-200 text-gray-600 font-semibold text-sm uppercase\">Eğitim Kategorileri ve Detaylar</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr v-for=\"(data, calisanId) in groupedEgitimler22\" :key=\"calisanId\" class=\"border-b border-gray-300\">\r\n      <!-- Çalışan Bilgileri -->\r\n      <td class=\"py-2 px-4 text-gray-700 border-r border-gray-300\">{{ data.calisanName }}</td>\r\n      <td class=\"py-2 px-4 text-gray-700 border-r border-gray-300\">{{ data.firmaAdi }}</td>\r\n      <td class=\"py-2 px-4 text-gray-700 border-r border-gray-300\">{{ data.yerleskeAdi }}</td>\r\n\r\n      <!-- Eğitim Kategorileri ve Detayları -->\r\n      <td class=\"py-2 px-4 text-gray-700\">\r\n        <button @click=\"toggleRow(calisanId)\" class=\"text-blue-500 hover:text-blue-700\">\r\n          {{ expandedRow === calisanId ? 'Detayları Gizle' : 'Detayları Gör' }}\r\n        </button>\r\n        <div v-if=\"expandedRow === calisanId\" class=\"mt-2 border-t border-gray-300 pt-2\">\r\n          <div v-for=\"(egitimler, kategori) in data.kategoriler\" :key=\"kategori\" class=\"mb-4\">\r\n            <strong class=\"text-red-400\">{{ kategori }}</strong>\r\n            <ul class=\"mt-2 ml-4 list-disc\">\r\n              <li v-for=\"egitim in egitimler\" :key=\"egitim.baslik\" class=\"mb-2\">\r\n                <strong class=\"font-bold\">{{ egitim.baslik }}</strong>\r\n                <div>Tarih: {{ formatDate(egitim.egitimTarihi) }}</div>\r\n                <div>Geçerlilik Tarihi: {{ formatDate(egitim.gecerlilikTarihi) }}</div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<!-- Modal -->\r\n<div v-if=\"isModalOpen\" class=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50\">\r\n  <div class=\"bg-white p-6 rounded-lg shadow-lg max-w-md w-full max-h-screen overflow-y-auto\">\r\n    <h2 class=\"text-2xl font-bold mb-4\">{{ selectedKategori.isim }}</h2>\r\n    <ul class=\"list-disc ml-6\">\r\n      <li v-for=\"egitim in selectedKategori.egitimKonular\" :key=\"egitim.id\">\r\n        {{ egitim.baslik }}\r\n      </li>\r\n    </ul>\r\n    <button @click=\"closeModal\" class=\"mt-4 bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg\">\r\n      Kapat\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n\r\n    <!-- Eğitim Ekleme ve Düzenleme Modalı -->\r\n    \r\n    <div v-if=\"isEgitimModalOpen\" class=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div class=\"bg-white p-6 rounded-lg shadow-lg max-w-md w-full max-h-screen overflow-y-auto\">\r\n        <h2 class=\"text-2xl mb-4\">{{ isEditMode ? 'Eğitimi Düzenle' : 'Yeni Eğitim Ekle' }}</h2>\r\n       \r\n        <form @submit.prevent=\"saveEgitim\">\r\n           <!-- Firma Seçimi -->\r\n          <div class=\"mb-4\">\r\n        <label class=\"block text-sm font-medium text-gray-600\">Firma Seçimi</label>\r\n        <select v-model=\"selectedFirmaId\" @change=\"fetchYerleskeler()\" class=\"border p-2 w-full rounded-md\" required>\r\n          <option v-for=\"firma in firmalar\" :key=\"firma.id\" :value=\"firma.id\">{{ firma.firmaAdi }}</option>\r\n        </select>\r\n      </div>\r\n       <!-- Yerleşke Seçimi -->\r\n       <div class=\"mb-4\">\r\n        <label class=\"block text-sm font-medium text-gray-600\">Taşeron Seçimi</label>\r\n        <select v-model=\"selectedYerleskeId\" @change=\"fetchCalisanlar22()\"  class=\"border p-2 w-full rounded-md\" :required=\"yerleskeler.length > 0\" >\r\n          <option v-for=\"yerleske in yerleskeler\" :key=\"yerleske.id\" :value=\"yerleske.id\">{{ yerleske.subeAdi }}</option>\r\n        </select>\r\n      </div>\r\n  <!-- Çalışan Seçimi (Checkbox ile Çoklu Seçim) -->\r\n  <div class=\"mb-4\">\r\n        <label class=\"block text-sm font-medium text-gray-600\">Çalışan Seçimi</label>\r\n        <div class=\"grid grid-cols-2 gap-2\"> <!-- Dört sütunlu grid sistemi -->\r\n          <div v-for=\"calisan in calisanlar\" :key=\"calisan.id\" class=\"flex items-center border-b border-gray-200 py-2 px-4\">\r\n            <input type=\"checkbox\" v-model=\"selectedCalisanlar\" :value=\"calisan.id\" class=\"mr-4\">\r\n            <div class=\"flex-1 flex space-x-2\">\r\n              <span>{{ calisan.adi }}</span>\r\n              <span>{{ calisan.soyadi }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n          <!-- Eğitim Kategorisi -->\r\n          <div class=\"mb-4\">\r\n            <label class=\"block text-sm font-medium text-gray-600\">Eğitim Kategorisi</label>\r\n            <select v-model=\"selectedKategoriId\" @change=\"fetchFilteredEgitimKonular()\" class=\"border p-2 w-full rounded-md\" required>\r\n              <option v-for=\"kategori in egitimKategorileri\" :key=\"kategori.id\" :value=\"kategori.id\">{{ kategori.isim }}</option>\r\n            </select>\r\n          </div>\r\n\r\n          <!-- Eğitim Konuları (Çoklu Seçim) -->\r\n          <div class=\"mb-4\">\r\n            <label class=\"block text-sm font-medium text-gray-600\">Eğitim Konuları</label>\r\n            <div v-if=\"filteredEgitimKonular.length > 0\">\r\n              <div v-for=\"konu in filteredEgitimKonular\" :key=\"konu.id\" class=\"flex items-center mb-2\">\r\n                <input type=\"checkbox\" v-model=\"selectedEgitimKonular\" :value=\"konu.id\" class=\"mr-2\" />\r\n                <span>{{ konu.baslik }}</span>\r\n              </div>\r\n            </div>\r\n            <p v-else class=\"text-sm text-gray-500\">Bu kategoride eğitim konusu bulunmamaktadır.</p>\r\n          </div>\r\n\r\n          <!-- Eğitim Süresi -->\r\n          <div class=\"mb-4\">\r\n            <label class=\"block text-sm font-medium text-gray-600\">Eğitim Süresi</label>\r\n            <input v-model=\"egitimFormFields.sure\" type=\"number\" min=\"1\" class=\"border p-2 w-full rounded-md\" placeholder=\"Saat veya dakika olarak giriniz\" required />\r\n          </div>\r\n\r\n          <!-- Eğitim Tarihi -->\r\n          <div class=\"mb-4\">\r\n            <label class=\"block text-sm font-medium text-gray-600\">Eğitim Tarihi</label>\r\n            <input v-model=\"egitimFormFields.egitimTarihi\" type=\"date\" class=\"border p-2 w-full rounded-md\" required />\r\n          </div>\r\n\r\n          <!-- Geçerlilik Tarihi -->\r\n          <div class=\"mb-4\">\r\n            <label class=\"block text-sm font-medium text-gray-600\">Geçerlilik Tarihi</label>\r\n            <input v-model=\"egitimFormFields.gecerlilikTarihi\" type=\"date\" class=\"border p-2 w-full rounded-md\" required />\r\n          </div>\r\n\r\n          <!-- Kaydet ve Kapat Butonları -->\r\n          <div class=\"space-y-2\">\r\n            <button type=\"submit\" class=\"bg-blue-600 text-white py-2 px-4 rounded-md w-full\">{{ isEditMode ? 'Güncelle' : 'Kaydet' }}</button>\r\n            <button @click=\"closeEgitimModal\" class=\"bg-red-600 text-white py-2 px-4 rounded-md w-full\">Kapat</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div>\r\n   \r\n  </div>\r\n \r\n\r\n</template>\r\n\r\n\r\n<script setup>\r\n\r\n//test bölümü\r\n\r\nconst kategoriler = ref([]);\r\nconst selectedKategori = ref(null);\r\nconst isModalOpen = ref(false);\r\n\r\n\r\n\r\nconst egitimler = ref([]);\r\nconst egitimKategorileri = ref([]);\r\nconst filteredEgitimKonular = ref([]);\r\nconst selectedKategoriId = ref(null);\r\nconst selectedEgitimKonular = ref([]);\r\nconst isEgitimModalOpen = ref(false);\r\nconst isEditMode = ref(false);\r\nconst egitimFormFields = ref({\r\n  id: null,\r\n  egitimTarihi: '',\r\n  gecerlilikTarihi: '',\r\n  sure: '',\r\n});\r\nconst firmalar = ref([])\r\nconst yerleskeler = ref([])\r\nconst calisanlar = ref([])\r\nconst selectedFirmaId = ref(null)\r\nconst selectedYerleskeId = ref(null)\r\nconst selectedCalisanlar = ref([])\r\nconst expandedCalisan = ref(null);\r\n\r\n\r\nconst fetchKategoriler = async () => {\r\n  const { data } = await useFetch('/api/kategori/get');\r\n  kategoriler.value = data.value || [];\r\n};\r\nconst expandedRow = ref(null);\r\n\r\nconst toggleRow = (rowId) => {\r\n  expandedRow.value = expandedRow.value === rowId ? null : rowId;\r\n};\r\n\r\n\r\n\r\n\r\nconst groupedEgitimler22 = computed(() => {\r\n  const grouped = {};\r\n\r\n  egitimler.value.forEach((egitim) => {\r\n    // Çalışan bilgisi\r\n    const calisanId = egitim.calisan.id;\r\n    const calisanName = `${egitim.calisan.adi} ${egitim.calisan.soyadi}`;\r\n    const firmaAdi = egitim.calisan.firma.firmaAdi;\r\n    const yerleskeAdi = egitim.calisan.yerleske?.subeAdi || \"Merkez\"; // Yerleşke yoksa alternatif metin\r\n    const egttarih=egitim.egitimTarihi\r\n    \r\n\r\n    // Eğer çalışan grupta yoksa, ekle\r\n    if (!grouped[calisanId]) {\r\n      grouped[calisanId] = {\r\n        calisanName,\r\n        firmaAdi,\r\n        yerleskeAdi,\r\n        egttarih,\r\n        kategoriler: {}\r\n      };\r\n    }\r\n\r\n    // Eğitim kategorisi\r\n    const kategori = egitim.egitimKonu.kategori.isim;\r\n\r\n    // Eğer kategori grupta yoksa, ekle\r\n    if (!grouped[calisanId].kategoriler[kategori]) {\r\n      grouped[calisanId].kategoriler[kategori] = [];\r\n    }\r\n\r\n    // Sadece aldığı eğitim konu başlığını ekle\r\n   // grouped[calisanId].kategoriler[kategori].push(egitim.egitimKonu.baslik);\r\n\r\n   // Eğitim bilgilerini kategori altına ekle\r\n   grouped[calisanId].kategoriler[kategori].push({\r\n      baslik: egitim.egitimKonu.baslik,\r\n      egitimTarihi: egitim.egitimTarihi,\r\n      gecerlilikTarihi: egitim.gecerlilikTarihi,\r\n    });\r\n    \r\n\r\n  });\r\n\r\n  return grouped;\r\n});\r\n\r\n\r\nconst toggleCalisan = (calisan) => {\r\n  expandedCalisan.value = expandedCalisan.value === calisan ? null : calisan;\r\n};\r\n\r\n\r\n\r\nconst expandedKategori = ref(null);\r\n\r\nconst toggleKategori = (kategori) => {\r\n  expandedKategori.value = expandedKategori.value === kategori ? null : kategori;\r\n};\r\n\r\nconst openModal = (kategori) => {\r\n  selectedKategori.value = kategori;\r\n  isModalOpen.value = true;\r\n};\r\n\r\nconst closeModal = () => {\r\n  isModalOpen.value = false;\r\n  selectedKategori.value = null;\r\n};\r\n\r\n// Firmaları yükle\r\nconst fetchFirmalar = async () => {\r\n  const { data } = await useFetch('/api/firma/get')\r\n  firmalar.value = data.value\r\n  console.log('fİRMA',data)\r\n}\r\n\r\nconst fetchYerleskeler = async () => {\r\n  if (selectedFirmaId.value) {\r\n    const { data } = await useFetch(`/api/yerleske/getByFirmaId?firmaId=${selectedFirmaId.value}`)\r\n    yerleskeler.value = data.value\r\n  }\r\n}\r\nconst fetchCalisanlar = async () => {\r\n  if (selectedYerleskeId.value) {\r\n    const { data } = await useFetch(`/api/calisan/getByYerleskeId?yerleskeId=${selectedYerleskeId.value}`)\r\n    calisanlar.value = data.value\r\n  }\r\n}\r\nconst fetchCalisanlar22 = async () => {\r\n  let endpoint = '';\r\n\r\n  if (selectedYerleskeId.value) {\r\n    // Yerleşke ID varsa, ona göre çalışanları getir\r\n    endpoint = `/api/calisan/getByYerleskeId?yerleskeId=${selectedYerleskeId.value}`;\r\n  } else if (selectedFirmaId.value) {\r\n    // Yerleşke ID yoksa, firma ID'ye göre çalışanları getir\r\n    endpoint = `/api/calisan/getByFirmaId?firmaId=${selectedFirmaId.value}`;\r\n  }\r\n\r\n  if (endpoint) {\r\n    const { data } = await useFetch(endpoint);\r\n    calisanlar.value = data.value || []; // Gelen veriyi al, boşsa boş bir dizi ata\r\n  } else {\r\n    calisanlar.value = []; // Eğer firma veya yerleşke ID yoksa çalışan listesini boş yap\r\n  }\r\n};\r\nwatch(\r\n  [selectedFirmaId, selectedYerleskeId],\r\n  () => {\r\n    fetchCalisanlar22();\r\n  },\r\n  { immediate: true }\r\n);\r\n\r\n// Eğitim kategorilerini ve konularını yükle\r\nconst fetchEgitimKategorileri = async () => {\r\n  const { data } = await useFetch('/api/kategori/get');\r\n  egitimKategorileri.value = data.value || [];\r\n};\r\n\r\nconst fetchFilteredEgitimKonular = async () => {\r\n  if (selectedKategoriId.value) {\r\n    const { data } = await useFetch(`/api/egitimkonu/getByKategoriId?kategoriId=${selectedKategoriId.value}`);\r\n    filteredEgitimKonular.value = data.value || [];\r\n  }\r\n};\r\n\r\n// Eğitimleri yükle\r\nconst fetchEgitimler = async () => {\r\n  const { data } = await useFetch('/api/egitim/get');\r\n  egitimler.value = data.value || [];\r\n};\r\n\r\nconst openEgitimModal = (egitim) => {\r\n  isEditMode.value = !!egitim;\r\n  selectedEgitimKonular.value = egitim ? egitim.egitimKonular.map((k) => k.id) : [];\r\n  egitimFormFields.value = egitim ? { ...egitim } : {\r\n    id: null,\r\n    egitimTarihi: '',\r\n    gecerlilikTarihi: '',\r\n    sure: '',\r\n  };\r\n  isEgitimModalOpen.value = true;\r\n};\r\n\r\nconst closeEgitimModal = () => {\r\n  isEgitimModalOpen.value = false;\r\n};\r\n\r\n\r\nconst saveEgitim = async () => {\r\n  const payloads = []; // Gönderilecek payload listesi\r\n\r\n  // Çalışanlar ve Eğitim Konuları için iç içe döngü\r\n  for (const calisanId of selectedCalisanlar.value) {\r\n    for (const egitimKonuId of selectedEgitimKonular.value) {\r\n      payloads.push({\r\n        calisanId, // Çalışan ID\r\n        egitimKonuId, // Eğitim Konusu ID\r\n        egitimTarihi: egitimFormFields.value.egitimTarihi,\r\n        gecerlilikTarihi: egitimFormFields.value.gecerlilikTarihi,\r\n        sure: egitimFormFields.value.sure,\r\n        belge: egitimFormFields.value.belge || null,\r\n      });\r\n    }\r\n  }\r\n\r\n  try {\r\n    // Tüm payloadları tek bir API isteği ile gönder\r\n    await useFetch('/api/egitim/post', {\r\n      method: 'POST',\r\n      body: { payloads },\r\n    });\r\n\r\n    // Başarılı bir işlem sonrası\r\n    alert('Eğitimler başarıyla kaydedildi.');\r\n    fetchEgitimler(); // Eğitimleri yeniden yükle\r\n    closeEgitimModal(); // Modalı kapat\r\n  } catch (error) {\r\n    console.error('Eğitim kaydedilirken bir hata oluştu:', error);\r\n    alert('Eğitim kaydedilirken bir hata oluştu. Lütfen tekrar deneyin.');\r\n  }\r\n};\r\n\r\n\r\nconst deleteEgitim = async (id) => {\r\n  await useFetch(`/api/egitim/${id}`, { method: 'DELETE' });\r\n  fetchEgitimler();\r\n};\r\n\r\nconst formatDate = (dateString) => {\r\n  const date = new Date(dateString);\r\n  return date.toLocaleDateString('tr-TR');\r\n};\r\n\r\nonMounted(() => {\r\n  fetchEgitimKategorileri();\r\n  fetchEgitimler();\r\n  fetchFirmalar();\r\n  fetchKategoriler();\r\n});\r\n</script>\r\n"],"names":["watch"],"mappings":"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","x_google_ignoreList":[0,1]}