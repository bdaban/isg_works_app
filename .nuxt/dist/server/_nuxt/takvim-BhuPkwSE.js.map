{"version":3,"file":"takvim-BhuPkwSE.js","sources":["../../../../components/EgitimTakvimi.vue"],"sourcesContent":["<template>\n  <div class=\"max-w-4xl mx-auto p-6 bg-white rounded-lg shadow-md\">\n    <div class=\"flex justify-between items-center mb-4\">\n      <button @click=\"prevMonth\" :class=\"prevButtonColor\"  class=\"text-white px-4 py-2 rounded\">Önceki Ay</button>\n      <h1 class=\"text-2xl font-bold text-center\"> {{ formath1(currentMonth),{locale:tr} }} </h1>\n\n      <button @click=\"nextMonth\" :class=\"nextButtonColor\" class=\" text-white px-4 py-2 rounded\">Sonraki Ay</button>\n    </div>\n\n    <!-- Takvim Başlıkları (Günler) -->\n    <div class=\"grid grid-cols-7 gap-4 text-center font-semibold text-gray-600\">\n      <div v-for=\"day in daysOfWeek\" :key=\"day\">{{ day }}</div>\n    </div>\n\n    <!-- Takvim Günleri -->\n    <div class=\"grid grid-cols-7 gap-4 mt-2\">\n      <!-- Boş Hücreler -->\n      <div v-for=\"n in firstDayOfMonth\" :key=\"'empty-' + n\" class=\"h-20\"></div>\n      \n      <!-- Ayın Günleri -->\n      <div \n        v-for=\"day in daysInMonth\" \n        :key=\"'day-' + day\" \n        :class=\"{\n          'h-20 border rounded p-1 cursor-pointer': true, \n          'bg-gray-100 text-white': isToday(day)\n        }\"\n        @click=\"openModal(day)\"\n      >\n        <div class=\"text-gray-800 font-bold\">{{ day }}</div>\n        \n        <!-- Randevu Sayısı -->\n        <div v-if=\"getEgtsForDay(day).length > 0\" class=\"text-xs mt-1 text-blue-500\">\n          {{ getEgtsForDay(day).length }} Egitim\n        </div>\n      </div>\n    </div>\n\n    <!-- Randevu Detayları için Modal -->\n    <div v-if=\"isModalOpen\" class=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center\">\n      <div class=\"bg-white rounded-lg p-4 max-w-xl w-full space-y-4\">\n        <div class=\"flex justify-between items-center\">\n          <h2 class=\"text-xl font-bold\">Eğitim Özeti {{ formatDate(selectedDate) }}</h2>\n          <button @click=\"closeModal\" class=\"text-gray-600\">X</button>\n        </div>\n        <ul>\n          <li v-for=\"egt in getEgtsForDay(selectedDate.getDate())\" :key=\"egt.id\" class=\"p-2 border-b\">\n           <span class=\"text-blue-600\">{{ egt.calisan.firma.firmaAdi }}-{{ egt.calisan.yerleske.subeAdi }}</span> - {{ egt.calisan.adi }} {{ egt.calisan.soyadi }} -\n          <span class=\"text-red-600 px-2\">{{ egt.egitimKonu.baslik }} </span>\n         \n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n \n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { addMonths, subMonths, startOfMonth, endOfMonth, isSameDay, format } from 'date-fns';\nimport { tr } from 'date-fns/locale';\n\nconst route = useRoute();\n\nconst egitim = ref([]);\nconst currentMonth = ref(new Date());\nconst selectedDate = ref(new Date());\nconst isModalOpen = ref(false);\nconst firmaId = ref('');\n\nconst daysOfWeek = [\"Paz\", \"Pzt\", \"Salı\", \"Çar\", \"Per\", \"Cum\", \"Cmt\"];\n\nonMounted( ()=>{\n  firmaId.value = route.query.firmaId\n  if (!currentMonth.value) {\n    currentMonth.value = new Date();\n  }\nfetchAppointments();\nconsole.log('Gelen ID :',firmaId.value)\n\n})\n\nconst firstDayOfMonth = computed(() => {\n  const firstDay = startOfMonth(currentMonth.value);\n  return firstDay.getDay();\n});\n\nconst daysInMonth = computed(() => {\n  const start = startOfMonth(currentMonth.value);\n  const end = endOfMonth(currentMonth.value);\n  return Array.from({ length: end.getDate() }, (_, i) => i + 1);\n});\n\n//eğitim tarihi\nconst getEgtsForDay = (day) => {\n  const date = new Date(currentMonth.value);\n  date.setDate(day);\n  return egitim.value.filter(egt => isSameDay(new Date(egt.date), date));\n};\n\nconst openModal = (day) => {\n  selectedDate.value = new Date(currentMonth.value);\n  selectedDate.value.setDate(day);\n  isModalOpen.value = true;\n};\n\nconst closeModal = () => {\n  isModalOpen.value = false;\n};\n\nconst formatDate = (date) => format(date, 'dd-MM-yyyy');\nconst formath1 = (date) => format(date, 'MMMM yyyy', { locale: tr });\n\n\n// Ayı değiştiren fonksiyonlar\nconst prevMonth = async () => {\n  currentMonth.value = subMonths(currentMonth.value, 1);\n  await fetchAppointments();\n};\n\nconst nextMonth = async () => {\n  currentMonth.value = addMonths(currentMonth.value, 1);\n  await fetchAppointments();\n};\n\n// Eğitim API'den çekme\nconst fetchAppointments = async () => {\n  try {\n  const { data: egtdata } = await useFetch(`/api/egitim/getByFirmaId?firmaId=${firmaId.value}`);\n  console.log('Eğitim Verileri:', egtdata.value);\n  egitim.value = egtdata.value.map((apt) => ({\n    ...apt,\n    date: new Date(apt.egitimTarihi),\n  }));\n} catch (error) {\n  console.error('Bir hata oluştu:', error);\n}\n\n \n};\n\n// Bugün ile eşleşen günü kontrol etme\nconst isToday = (day) => {\n  const date = new Date(currentMonth.value);\n  date.setDate(day);\n  return isSameDay(date, new Date());\n};\n\n\n\n// Mevsime göre buton rengi belirleme\nconst season = computed(() => {\n  const month = currentMonth.value.getMonth() + 1; // Aylar 0'dan başladığı için 1 ekliyoruz\n  if (month >= 3 && month <= 5) return 'spring'; // İlkbahar\n  if (month >= 6 && month <= 8) return 'summer'; // Yaz\n  if (month >= 9 && month <= 11) return 'autumn'; // Sonbahar\n  return 'winter'; // Kış\n});\n\nconst prevButtonColor = computed(() => {\n  switch (season.value) {\n    case 'spring':\n      return 'bg-green-300'; // İlkbahar\n    case 'summer':\n      return 'bg-yellow-300'; // Yaz\n    case 'autumn':\n      return 'bg-orange-300'; // Sonbahar\n    case 'winter':\n      return 'bg-blue-300'; // Kış\n  }\n});\nconst nextButtonColor = computed(() => {\n  switch (season.value) {\n    case 'spring':\n      return 'bg-green-500'; // İlkbahar\n    case 'summer':\n      return 'bg-yellow-500'; // Yaz\n    case 'autumn':\n      return 'bg-orange-500'; // Sonbahar\n    case 'winter':\n      return 'bg-blue-500'; // Kış\n  }\n});\n  \n</script>\n\n<style scoped>\n/* Modal için özel stiller */\n.fixed {\n  z-index: 50;\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAgEc,aAAU;AAExB,UAAM,SAAS,IAAI,CAAA,CAAE;AACrB,UAAM,eAAe,IAAI,oBAAI,KAAI,CAAE;AACnC,UAAM,eAAe,IAAI,oBAAI,KAAI,CAAE;AACnC,UAAM,cAAc,IAAI,KAAK;AACb,QAAI,EAAE;AAEtB,UAAM,aAAa,CAAC,OAAO,OAAO,QAAQ,OAAO,OAAO,OAAO,KAAK;AAYpE,UAAM,kBAAkB,SAAS,MAAM;AACrC,YAAM,WAAW,aAAa,aAAa,KAAK;AAChD,aAAO,SAAS;IAClB,CAAC;AAED,UAAM,cAAc,SAAS,MAAM;AACnB,mBAAa,aAAa,KAAK;AAC7C,YAAM,MAAM,WAAW,aAAa,KAAK;AACzC,aAAO,MAAM,KAAK,EAAE,QAAQ,IAAI,UAAW,GAAE,CAAC,GAAG,MAAM,IAAI,CAAC;AAAA,IAC9D,CAAC;AAGD,UAAM,gBAAgB,CAAC,QAAQ;AAC7B,YAAM,OAAO,IAAI,KAAK,aAAa,KAAK;AACxC,WAAK,QAAQ,GAAG;AAChB,aAAO,OAAO,MAAM,OAAO,SAAO,UAAU,IAAI,KAAK,IAAI,IAAI,GAAG,IAAI,CAAC;AAAA,IACvE;AAYA,UAAM,aAAa,CAAC,SAAS,OAAO,MAAM,YAAY;AACtD,UAAM,WAAW,CAAC,SAAS,OAAO,MAAM,aAAa,EAAE,QAAQ,GAAE,CAAE;AA+BnE,UAAM,UAAU,CAAC,QAAQ;AACvB,YAAM,OAAO,IAAI,KAAK,aAAa,KAAK;AACxC,WAAK,QAAQ,GAAG;AAChB,aAAO,UAAU,MAAM,oBAAI,KAAM,CAAA;AAAA,IACnC;AAKA,UAAM,SAAS,SAAS,MAAM;AAC5B,YAAM,QAAQ,aAAa,MAAM,SAAQ,IAAK;AAC9C,UAAI,SAAS,KAAK,SAAS,EAAG,QAAO;AACrC,UAAI,SAAS,KAAK,SAAS,EAAG,QAAO;AACrC,UAAI,SAAS,KAAK,SAAS,GAAI,QAAO;AACtC,aAAO;AAAA,IACT,CAAC;AAED,UAAM,kBAAkB,SAAS,MAAM;AACrC,cAAQ,OAAO,OAAK;AAAA,QAClB,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,MACX;AAAA,IACF,CAAC;AACD,UAAM,kBAAkB,SAAS,MAAM;AACrC,cAAQ,OAAO,OAAK;AAAA,QAClB,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,MACX;AAAA,IACF,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}